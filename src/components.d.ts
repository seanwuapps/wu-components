/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface CodeBlock {
      'code': string;
      'language': string;
    }

    interface WuAccordionHeader {

    }

    interface WuAccordion {

    }

    interface WuBurger {
      'animation': string;
      'target': string;
      'theme': string;
    }

    interface WuButton {
      'disabled': boolean;
      'href': string;
      'theme': string;
      'type': 'submit' | 'reset' | 'button';
    }

    interface WuCard {
      'alt': string;
      'cardTitle': string;
      'hover': boolean;
      'src': string;
      'thumb': string;
    }

    interface WuDivider {

    }

    interface WuCol {
      'basis': string;
      'portion': string;
    }

    interface WuRow {
      'gap': string;
    }

    interface WuImg {
      'alt': string;
      'positionX': string;
      'positionY': string;
      'shape': string;
      'src': string;
      'thumb': string;
    }

    interface WuDrawerMenu {
      'items': Object|String;
      'position': string;
      'theme': string;
    }

    interface WuMenuHeader {
      'img': string;
      'imgHref': string;
      'imgShape': 'circle' | 'square';
      'theme': string;
    }

    interface WuMenuItem {
      'theme': string;
    }

    interface WuRating {
      'getVal': () => number;
      'icon': any;
      'iconOutline': any;
      'max': number;
      'setVal': (val: any) => number;
      'value': number;
    }

    interface WuShadow {
      'depth': number;
      'type': string;
    }

    interface WuSpinner {
      'color': string;
      'type': string;
    }

    interface WuTinderCard {
      'leftBtnText': string;
      'rightBtnText': string;
      'src': string;
      'threshold': number;
      'thumb': string;
    }
  }


    interface HTMLCodeBlockElement extends StencilComponents.CodeBlock, HTMLStencilElement {}

    var HTMLCodeBlockElement: {
      prototype: HTMLCodeBlockElement;
      new (): HTMLCodeBlockElement;
    };
    

    interface HTMLWuAccordionHeaderElement extends StencilComponents.WuAccordionHeader, HTMLStencilElement {}

    var HTMLWuAccordionHeaderElement: {
      prototype: HTMLWuAccordionHeaderElement;
      new (): HTMLWuAccordionHeaderElement;
    };
    

    interface HTMLWuAccordionElement extends StencilComponents.WuAccordion, HTMLStencilElement {}

    var HTMLWuAccordionElement: {
      prototype: HTMLWuAccordionElement;
      new (): HTMLWuAccordionElement;
    };
    

    interface HTMLWuBurgerElement extends StencilComponents.WuBurger, HTMLStencilElement {}

    var HTMLWuBurgerElement: {
      prototype: HTMLWuBurgerElement;
      new (): HTMLWuBurgerElement;
    };
    

    interface HTMLWuButtonElement extends StencilComponents.WuButton, HTMLStencilElement {}

    var HTMLWuButtonElement: {
      prototype: HTMLWuButtonElement;
      new (): HTMLWuButtonElement;
    };
    

    interface HTMLWuCardElement extends StencilComponents.WuCard, HTMLStencilElement {}

    var HTMLWuCardElement: {
      prototype: HTMLWuCardElement;
      new (): HTMLWuCardElement;
    };
    

    interface HTMLWuDividerElement extends StencilComponents.WuDivider, HTMLStencilElement {}

    var HTMLWuDividerElement: {
      prototype: HTMLWuDividerElement;
      new (): HTMLWuDividerElement;
    };
    

    interface HTMLWuColElement extends StencilComponents.WuCol, HTMLStencilElement {}

    var HTMLWuColElement: {
      prototype: HTMLWuColElement;
      new (): HTMLWuColElement;
    };
    

    interface HTMLWuRowElement extends StencilComponents.WuRow, HTMLStencilElement {}

    var HTMLWuRowElement: {
      prototype: HTMLWuRowElement;
      new (): HTMLWuRowElement;
    };
    

    interface HTMLWuImgElement extends StencilComponents.WuImg, HTMLStencilElement {}

    var HTMLWuImgElement: {
      prototype: HTMLWuImgElement;
      new (): HTMLWuImgElement;
    };
    

    interface HTMLWuDrawerMenuElement extends StencilComponents.WuDrawerMenu, HTMLStencilElement {}

    var HTMLWuDrawerMenuElement: {
      prototype: HTMLWuDrawerMenuElement;
      new (): HTMLWuDrawerMenuElement;
    };
    

    interface HTMLWuMenuHeaderElement extends StencilComponents.WuMenuHeader, HTMLStencilElement {}

    var HTMLWuMenuHeaderElement: {
      prototype: HTMLWuMenuHeaderElement;
      new (): HTMLWuMenuHeaderElement;
    };
    

    interface HTMLWuMenuItemElement extends StencilComponents.WuMenuItem, HTMLStencilElement {}

    var HTMLWuMenuItemElement: {
      prototype: HTMLWuMenuItemElement;
      new (): HTMLWuMenuItemElement;
    };
    

    interface HTMLWuRatingElement extends StencilComponents.WuRating, HTMLStencilElement {}

    var HTMLWuRatingElement: {
      prototype: HTMLWuRatingElement;
      new (): HTMLWuRatingElement;
    };
    

    interface HTMLWuShadowElement extends StencilComponents.WuShadow, HTMLStencilElement {}

    var HTMLWuShadowElement: {
      prototype: HTMLWuShadowElement;
      new (): HTMLWuShadowElement;
    };
    

    interface HTMLWuSpinnerElement extends StencilComponents.WuSpinner, HTMLStencilElement {}

    var HTMLWuSpinnerElement: {
      prototype: HTMLWuSpinnerElement;
      new (): HTMLWuSpinnerElement;
    };
    

    interface HTMLWuTinderCardElement extends StencilComponents.WuTinderCard, HTMLStencilElement {}

    var HTMLWuTinderCardElement: {
      prototype: HTMLWuTinderCardElement;
      new (): HTMLWuTinderCardElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'code-block': JSXElements.CodeBlockAttributes;
    'wu-accordion-header': JSXElements.WuAccordionHeaderAttributes;
    'wu-accordion': JSXElements.WuAccordionAttributes;
    'wu-burger': JSXElements.WuBurgerAttributes;
    'wu-button': JSXElements.WuButtonAttributes;
    'wu-card': JSXElements.WuCardAttributes;
    'wu-divider': JSXElements.WuDividerAttributes;
    'wu-col': JSXElements.WuColAttributes;
    'wu-row': JSXElements.WuRowAttributes;
    'wu-img': JSXElements.WuImgAttributes;
    'wu-drawer-menu': JSXElements.WuDrawerMenuAttributes;
    'wu-menu-header': JSXElements.WuMenuHeaderAttributes;
    'wu-menu-item': JSXElements.WuMenuItemAttributes;
    'wu-rating': JSXElements.WuRatingAttributes;
    'wu-shadow': JSXElements.WuShadowAttributes;
    'wu-spinner': JSXElements.WuSpinnerAttributes;
    'wu-tinder-card': JSXElements.WuTinderCardAttributes;
    }
  }

  namespace JSXElements {

    export interface CodeBlockAttributes extends HTMLAttributes {
      'code'?: string;
      'language'?: string;
    }

    export interface WuAccordionHeaderAttributes extends HTMLAttributes {

    }

    export interface WuAccordionAttributes extends HTMLAttributes {

    }

    export interface WuBurgerAttributes extends HTMLAttributes {
      'animation'?: string;
      'target'?: string;
      'theme'?: string;
    }

    export interface WuButtonAttributes extends HTMLAttributes {
      'disabled'?: boolean;
      'href'?: string;
      'theme'?: string;
      'type'?: 'submit' | 'reset' | 'button';
    }

    export interface WuCardAttributes extends HTMLAttributes {
      'alt'?: string;
      'cardTitle'?: string;
      'hover'?: boolean;
      'src'?: string;
      'thumb'?: string;
    }

    export interface WuDividerAttributes extends HTMLAttributes {

    }

    export interface WuColAttributes extends HTMLAttributes {
      'basis'?: string;
      'portion'?: string;
    }

    export interface WuRowAttributes extends HTMLAttributes {
      'gap'?: string;
    }

    export interface WuImgAttributes extends HTMLAttributes {
      'alt'?: string;
      'positionX'?: string;
      'positionY'?: string;
      'shape'?: string;
      'src'?: string;
      'thumb'?: string;
    }

    export interface WuDrawerMenuAttributes extends HTMLAttributes {
      'items'?: Object|String;
      'position'?: string;
      'theme'?: string;
    }

    export interface WuMenuHeaderAttributes extends HTMLAttributes {
      'img'?: string;
      'imgHref'?: string;
      'imgShape'?: 'circle' | 'square';
      'theme'?: string;
    }

    export interface WuMenuItemAttributes extends HTMLAttributes {
      'theme'?: string;
    }

    export interface WuRatingAttributes extends HTMLAttributes {
      'icon'?: any;
      'iconOutline'?: any;
      'max'?: number;
      'onChange'?: (event: CustomEvent) => void;
      'value'?: number;
    }

    export interface WuShadowAttributes extends HTMLAttributes {
      'depth'?: number;
      'type'?: string;
    }

    export interface WuSpinnerAttributes extends HTMLAttributes {
      'color'?: string;
      'type'?: string;
    }

    export interface WuTinderCardAttributes extends HTMLAttributes {
      'leftBtnText'?: string;
      'onSwipe'?: (event: CustomEvent) => void;
      'rightBtnText'?: string;
      'src'?: string;
      'threshold'?: number;
      'thumb'?: string;
    }
  }

  interface HTMLElementTagNameMap {
    'code-block': HTMLCodeBlockElement
    'wu-accordion-header': HTMLWuAccordionHeaderElement
    'wu-accordion': HTMLWuAccordionElement
    'wu-burger': HTMLWuBurgerElement
    'wu-button': HTMLWuButtonElement
    'wu-card': HTMLWuCardElement
    'wu-divider': HTMLWuDividerElement
    'wu-col': HTMLWuColElement
    'wu-row': HTMLWuRowElement
    'wu-img': HTMLWuImgElement
    'wu-drawer-menu': HTMLWuDrawerMenuElement
    'wu-menu-header': HTMLWuMenuHeaderElement
    'wu-menu-item': HTMLWuMenuItemElement
    'wu-rating': HTMLWuRatingElement
    'wu-shadow': HTMLWuShadowElement
    'wu-spinner': HTMLWuSpinnerElement
    'wu-tinder-card': HTMLWuTinderCardElement
  }

  interface ElementTagNameMap {
    'code-block': HTMLCodeBlockElement;
    'wu-accordion-header': HTMLWuAccordionHeaderElement;
    'wu-accordion': HTMLWuAccordionElement;
    'wu-burger': HTMLWuBurgerElement;
    'wu-button': HTMLWuButtonElement;
    'wu-card': HTMLWuCardElement;
    'wu-divider': HTMLWuDividerElement;
    'wu-col': HTMLWuColElement;
    'wu-row': HTMLWuRowElement;
    'wu-img': HTMLWuImgElement;
    'wu-drawer-menu': HTMLWuDrawerMenuElement;
    'wu-menu-header': HTMLWuMenuHeaderElement;
    'wu-menu-item': HTMLWuMenuItemElement;
    'wu-rating': HTMLWuRatingElement;
    'wu-shadow': HTMLWuShadowElement;
    'wu-spinner': HTMLWuSpinnerElement;
    'wu-tinder-card': HTMLWuTinderCardElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;